# Generated by Django 5.0.1 on 2024-01-19 13:45

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CorporateDomains',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('domain', models.CharField(max_length=255)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'corporate_domains',
            },
        ),
        migrations.CreateModel(
            name='FosUserUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField(null=True)),
                ('username', models.CharField(max_length=180)),
                ('profile_picture', models.CharField(max_length=255, null=True)),
                ('access_token', models.CharField(max_length=255, null=True)),
                ('username_canonical', models.CharField(max_length=180, unique=True)),
                ('email', models.CharField(max_length=180)),
                ('email_canonical', models.CharField(max_length=180, unique=True)),
                ('enabled', models.BooleanField()),
                ('salt', models.CharField(max_length=255, null=True)),
                ('password', models.CharField(max_length=255)),
                ('last_login', models.DateTimeField(null=True)),
                ('confirmation_token', models.CharField(max_length=180, null=True, unique=True)),
                ('password_requested_at', models.DateTimeField(null=True)),
                ('roles', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('date_of_birth', models.DateTimeField(null=True)),
                ('firstname', models.CharField(max_length=64, null=True)),
                ('privacy', models.CharField(default='private', max_length=255, null=True)),
                ('lastname', models.CharField(max_length=64, null=True)),
                ('website', models.CharField(max_length=64, null=True)),
                ('biography', models.CharField(max_length=1000, null=True)),
                ('gender', models.CharField(max_length=1, null=True)),
                ('locale', models.CharField(max_length=8, null=True)),
                ('timezone', models.CharField(max_length=64, null=True)),
                ('phone', models.CharField(max_length=64, null=True)),
                ('facebook_uid', models.CharField(max_length=255, null=True)),
                ('facebook_name', models.CharField(max_length=255, null=True)),
                ('facebook_data', models.TextField(null=True)),
                ('twitter_uid', models.CharField(max_length=255, null=True)),
                ('twitter_name', models.CharField(max_length=255, null=True)),
                ('twitter_data', models.TextField(null=True)),
                ('gplus_uid', models.CharField(max_length=255, null=True)),
                ('gplus_name', models.CharField(max_length=255, null=True)),
                ('gplus_data', models.TextField(null=True)),
                ('token', models.CharField(max_length=255, null=True)),
                ('two_step_code', models.CharField(max_length=255, null=True)),
                ('promotional_email_enable', models.BooleanField(null=True)),
                ('corporate_email_enable', models.BooleanField(null=True)),
                ('about_corporate', models.TextField(null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('term_condition', models.CharField(max_length=255, null=True)),
                ('is_gdpr', models.BooleanField(null=True)),
                ('address_one', models.CharField(max_length=100, null=True)),
                ('address_two', models.CharField(max_length=100, null=True)),
                ('po_box', models.CharField(max_length=50, null=True)),
                ('city', models.CharField(max_length=50, null=True)),
                ('country', models.CharField(max_length=50, null=True)),
                ('contact_title', models.CharField(max_length=100, null=True)),
                ('contact_firstname', models.CharField(max_length=50, null=True)),
                ('contact_lastname', models.CharField(max_length=50, null=True)),
                ('designation', models.CharField(max_length=50, null=True)),
                ('contact_email', models.CharField(max_length=50, null=True)),
                ('contact_no', models.CharField(max_length=100, null=True)),
                ('contact_url', models.CharField(max_length=100, null=True)),
                ('notes', models.CharField(max_length=255, null=True)),
                ('company_logo', models.CharField(max_length=255, null=True)),
                ('company_name', models.CharField(max_length=100, null=True)),
                ('latitude', models.CharField(max_length=255, null=True)),
                ('longitude', models.CharField(max_length=255, null=True)),
                ('card_id', models.CharField(max_length=100, null=True)),
                ('notification', models.BooleanField(null=True)),
                ('enable_discount', models.BooleanField(null=True)),
                ('is_profile_completed', models.BooleanField(default=False)),
                ('step_count', models.IntegerField(null=True)),
                ('distance', models.FloatField(null=True)),
                ('step_date_time', models.DateTimeField(null=True)),
                ('last_reward_steps', models.IntegerField(null=True)),
                ('is_deleted', models.IntegerField(default=0)),
                ('apple_id', models.CharField(max_length=255, null=True)),
                ('company_banner', models.CharField(max_length=255, null=True)),
                ('appVersion_id', models.IntegerField(null=True)),
                ('is_onboarded', models.BooleanField(default=False)),
                ('is_app_user', models.BooleanField(default=False)),
                ('cognito_username', models.CharField(max_length=255, null=True)),
                ('is_pushed', models.JSONField(null=True)),
                ('temp_auth', models.CharField(max_length=1000, null=True)),
                ('is_forced_logout', models.BooleanField(default=False)),
                ('stripe_customer_id', models.CharField(max_length=255, null=True)),
                ('garmin_user_id', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'fos_user_user',
            },
        ),
        migrations.CreateModel(
            name='GamificationPointType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('points', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'gamification_point_type',
            },
        ),
        migrations.CreateModel(
            name='WorkoutLevel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('point', models.IntegerField()),
                ('image_name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ar', models.TextField(blank=True, null=True)),
                ('description_ar', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'workout_level',
            },
        ),
        migrations.CreateModel(
            name='WorkoutType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('name', models.CharField(db_column='name', max_length=100)),
                ('code', models.CharField(db_column='code', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField()),
                ('image_name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ar', models.TextField(blank=True, null=True)),
                ('description_ar', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'workout_type',
            },
        ),
        migrations.CreateModel(
            name='FacilityPackage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('facility_id', models.IntegerField(null=True)),
                ('package_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(null=True)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility_packages', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'facility_package',
            },
        ),
        migrations.CreateModel(
            name='FacilityGallery',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('facility_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(null=True)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('image_name', models.CharField(max_length=255, null=True)),
                ('sequence', models.IntegerField(null=True)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='facility_galleries', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'facility_gallery',
            },
        ),
        migrations.CreateModel(
            name='FacilityCheckinHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('facility_id', models.IntegerField(null=True)),
                ('member_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(null=True)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('checkin', models.IntegerField(default=0)),
                ('time', models.DateTimeField()),
                ('fos_user_user_facility_checkin_history_facility_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='facility_checkin_history_facility_id', to='gamification.fosuseruser')),
                ('fos_user_user_facility_checkin_history_member_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='facility_checkin_history_member_id', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'facility_checkin_history',
            },
        ),
        migrations.CreateModel(
            name='FacilityAmenity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('facility_id', models.IntegerField(null=True)),
                ('amenity_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(null=True)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='facility_amenities', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'facility_amenitiy',
            },
        ),
        migrations.CreateModel(
            name='FacilityActivity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('facility_id', models.IntegerField(null=True)),
                ('activity_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(null=True)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('is_recommended', models.BooleanField(default=False)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='facility_activities', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'facility_activity',
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(null=True)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(null=True)),
                ('image_name', models.CharField(max_length=255, null=True)),
                ('video_name', models.CharField(max_length=255, null=True)),
                ('point', models.IntegerField(null=True)),
                ('time', models.IntegerField(null=True)),
                ('description_ar', models.TextField(null=True)),
                ('name_ar', models.TextField(null=True)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='exercises', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'exercise',
            },
        ),
        migrations.CreateModel(
            name='DeviceConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(null=True)),
                ('config', models.TextField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_configs', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'device_config',
            },
        ),
        migrations.CreateModel(
            name='CorporateKey',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(null=True)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('company_key', models.CharField(max_length=25)),
                ('validate_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='corporate_keys', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'corporate_key',
            },
        ),
        migrations.CreateModel(
            name='CorporateDepartment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('corporate_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(null=True)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('code', models.CharField(max_length=25)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(null=True)),
                ('imageName', models.CharField(max_length=255, null=True)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='corporate_departments', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'corporate_department',
            },
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('company_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(null=True)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('title', models.CharField(max_length=255)),
                ('logo_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField()),
                ('code', models.CharField(db_index=True, max_length=255, unique=True)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='challenges', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'challenge',
            },
        ),
        migrations.CreateModel(
            name='BookingWhiteLabelUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bookingwhitelabel_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookingwhitelabel_users', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'bookingwhitelabel_user',
            },
        ),
        migrations.CreateModel(
            name='AppVersion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(null=True)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('version', models.CharField(max_length=255)),
                ('status', models.BooleanField()),
                ('current_release', models.BooleanField()),
                ('fos_user_user', models.ManyToManyField(related_name='app_versions', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'app_version',
            },
        ),
        migrations.CreateModel(
            name='FosUserUserGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('group_id', models.IntegerField()),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_groups', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'fos_user_group',
            },
        ),
        migrations.CreateModel(
            name='GamificationCorePointRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assign_date', models.DateTimeField(blank=True, null=True)),
                ('log_activity', models.IntegerField(default=0, null=True)),
                ('booking', models.IntegerField(default=0, null=True)),
                ('step', models.IntegerField(default=0, null=True)),
                ('heart_rate', models.IntegerField(default=0, null=True)),
                ('ondemand', models.IntegerField(default=0, null=True)),
                ('day_core_point', models.IntegerField(default=0, null=True)),
                ('total_core_point', models.IntegerField(default=0, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'gamification_core_point_record',
            },
        ),
        migrations.CreateModel(
            name='GamificationPoint',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assign_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.fosuseruser')),
                ('gamification_point_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.gamificationpointtype')),
            ],
            options={
                'db_table': 'gamification_point',
            },
        ),
        migrations.CreateModel(
            name='GroupInvites',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=180)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group_invited_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_invited_by_user', to='gamification.fosuseruser')),
                ('group_invited_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_invited_user', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'group_invites',
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=180, null=True)),
                ('logo', models.CharField(blank=True, max_length=255, null=True)),
                ('cover_photo', models.CharField(blank=True, max_length=255, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('group_type', models.CharField(blank=True, max_length=180, null=True)),
                ('privacy', models.CharField(max_length=255)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_cod_official', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, choices=[('Active', 'active'), ('Inactive', 'inactive')], default='Active', max_length=180, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gamification.fosuseruser')),
                ('group_invites', models.ManyToManyField(related_name='groups', to='gamification.groupinvites')),
            ],
            options={
                'db_table': 'groups',
            },
        ),
        migrations.AddField(
            model_name='groupinvites',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.groups'),
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('provider_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, null=True)),
                ('image', models.CharField(max_length=255, null=True)),
                ('description', models.CharField(max_length=255, null=True)),
                ('firstName', models.CharField(max_length=255)),
                ('lastName', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=180, null=True)),
                ('phone', models.CharField(max_length=64, null=True)),
                ('emergency_phone', models.CharField(max_length=64, null=True)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='instructors', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'instructor',
            },
        ),
        migrations.CreateModel(
            name='ManualCheckinHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('activity_id', models.IntegerField(null=True)),
                ('member_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('time', models.DateTimeField()),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='manual_checkins', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'manual_checkin_history',
            },
        ),
        migrations.CreateModel(
            name='MemberAction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(null=True)),
                ('action_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('isCompleted', models.BooleanField(null=True)),
                ('value', models.CharField(max_length=255, null=True)),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='member_actions', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'member_action',
            },
        ),
        migrations.CreateModel(
            name='MemberActionPoint',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(null=True)),
                ('action_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('action_date', models.DateField()),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='member_action_points', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'member_action_point',
            },
        ),
        migrations.CreateModel(
            name='MemberArticle',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('article_id', models.IntegerField()),
                ('key_id', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_articles', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'member_article',
            },
        ),
        migrations.CreateModel(
            name='MemberBilling',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('charge_id', models.CharField(max_length=100)),
                ('track_id', models.CharField(max_length=100)),
                ('card_id', models.CharField(max_length=100)),
                ('last_four', models.CharField(max_length=4)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vat', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(max_length=3)),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('transaction_response', models.TextField()),
                ('transaction_type', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('payment_gateway_used', models.CharField(max_length=50)),
                ('failure_code', models.CharField(max_length=255, null=True)),
                ('product_purchased', models.CharField(max_length=255, null=True)),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='member_billing', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'member_billing',
            },
        ),
        migrations.CreateModel(
            name='MemberChallengeInvite',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(null=True)),
                ('challenge_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('status', models.CharField(max_length=255)),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='challenge_invites', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'member_challenge_invite',
            },
        ),
        migrations.CreateModel(
            name='MemberDeviceToken',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(null=True)),
                ('api_key_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('device_type', models.CharField(max_length=10)),
                ('device_token', models.TextField(null=True)),
                ('is_login', models.BooleanField()),
                ('build', models.CharField(max_length=100, null=True)),
                ('version', models.CharField(max_length=100, null=True)),
                ('identifier_key', models.CharField(max_length=255, null=True)),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='device_tokens', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'member_device_token',
            },
        ),
        migrations.CreateModel(
            name='MemberKey',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(null=True)),
                ('key_id', models.IntegerField(null=True)),
                ('created', models.DateTimeField()),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='member_keys', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'member_key',
            },
        ),
        migrations.CreateModel(
            name='MemberMeasurement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('point', models.IntegerField()),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('height', models.DecimalField(decimal_places=2, max_digits=10)),
                ('waist', models.DecimalField(decimal_places=2, max_digits=10)),
                ('thighs', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('hips', models.DecimalField(decimal_places=2, max_digits=10)),
                ('chest', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('isCurrent', models.BooleanField(null=True)),
                ('image_name', models.CharField(max_length=255, null=True)),
                ('wrist', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('forearm', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='member_measurements', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'member_measurement',
            },
        ),
        migrations.CreateModel(
            name='MemberPackage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('checkin', models.IntegerField(default=0)),
                ('card_id', models.CharField(max_length=100, null=True)),
                ('is_promotion', models.BooleanField(default=False)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='member_packages', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'member_package',
            },
        ),
        migrations.CreateModel(
            name='MemberPromotionClicks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField()),
                ('promotion_id', models.IntegerField()),
                ('code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('clicks', models.BigIntegerField(default=0)),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'member_promotion_clicks',
            },
        ),
        migrations.CreateModel(
            name='MemberScheduleActivity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(null=True)),
                ('schedule_detail_id', models.IntegerField(null=True)),
                ('package_id', models.IntegerField()),
                ('is_deleted', models.BooleanField(null=True)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('checkin', models.IntegerField()),
                ('is_favourite', models.BooleanField()),
                ('STATUS', models.CharField(choices=[('BOOKED', 'booked'), ('FAVOURITE', 'favourite'), ('CANCELLED', 'cancelled'), ('Expired', 'expired'), ('RESERVED', 'reserved')], max_length=255, null=True)),
                ('reminder', models.BooleanField(null=True)),
                ('member_type', models.CharField(default='ForMe', max_length=255)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='member_schedule_activities', to='gamification.fosuseruser')),
                ('member_package', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='member_schedule_activities', to='gamification.memberpackage')),
            ],
            options={
                'db_table': 'member_schedule_activity',
            },
        ),
        migrations.CreateModel(
            name='ProfileKey',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('company_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('code', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('expire_date', models.DateTimeField(null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='profile_key', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'profile_key',
            },
        ),
        migrations.CreateModel(
            name='UserAwardPoint',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('points_on_award', models.IntegerField()),
                ('total_points', models.IntegerField()),
                ('award_date_time', models.DateTimeField()),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='user_award_point', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'user_award_point',
            },
        ),
        migrations.CreateModel(
            name='UserCompany',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(null=True)),
                ('company_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('role', models.CharField(max_length=255)),
                ('fos_user_user_fos_user_userTouser_company_company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='user_company_company_id', to='gamification.fosuseruser')),
                ('fos_user_user_fos_user_userTouser_company_user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='user_company_user_id', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'user_company',
            },
        ),
        migrations.CreateModel(
            name='UserDocuments',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('documentName', models.CharField(max_length=255)),
                ('is_verified', models.BooleanField(default=False)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='user_documents', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'user_documents',
            },
        ),
        migrations.CreateModel(
            name='UserEmergency',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(null=True)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('firstName', models.CharField(max_length=255, null=True)),
                ('lastName', models.CharField(max_length=255, null=True)),
                ('email', models.CharField(max_length=255, null=True)),
                ('phoneNumber', models.CharField(max_length=255, null=True)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='user_emergencies', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'UserEmergency',
            },
        ),
        migrations.CreateModel(
            name='UserGamificationChallenge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField(default=0, null=True)),
                ('gamification_challenge_id', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'user_gamification_challenge',
            },
        ),
        migrations.CreateModel(
            name='GamificationChallenge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('logo', models.CharField(blank=True, max_length=255, null=True)),
                ('cover_photo', models.CharField(blank=True, max_length=255, null=True)),
                ('slug_url', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('status', models.CharField(blank=True, max_length=180, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_default', models.BooleanField(default=False)),
                ('corporate_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gamification.fosuseruser')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gamification.groups')),
                ('user_gamification_challenge', models.ManyToManyField(to='gamification.usergamificationchallenge')),
            ],
            options={
                'db_table': 'gamification_challenge',
            },
        ),
        migrations.CreateModel(
            name='UserGroups',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('accepted', 'Accepted'), ('pending', 'Pending'), ('rejected', 'Rejected')], default='accepted', max_length=100)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.groups')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'user_groups',
            },
        ),
        migrations.AddField(
            model_name='groups',
            name='user',
            field=models.ManyToManyField(related_name='groups', to='gamification.usergroups'),
        ),
        migrations.CreateModel(
            name='UserHealthAnalytic',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_sleep_well', models.BooleanField(null=True)),
                ('water_intake', models.IntegerField(null=True)),
                ('breath_count', models.IntegerField(null=True)),
                ('step_count', models.IntegerField(null=True)),
                ('heart_rate', models.IntegerField(null=True)),
                ('watched_content', models.IntegerField(null=True)),
                ('calories_count', models.FloatField(null=True)),
                ('stat_type', models.CharField(max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'user_health_analytic',
            },
        ),
        migrations.CreateModel(
            name='UserProfileCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('profilecategory_id', models.IntegerField()),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile_category', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'user_profilecategory',
            },
        ),
        migrations.CreateModel(
            name='UserSaveCardTracking',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('save_card_tracking_id', models.CharField(max_length=255, null=True)),
                ('last_four', models.CharField(max_length=255, null=True)),
                ('payment_gateway_used', models.CharField(max_length=255, null=True)),
                ('card_holder_name', models.CharField(max_length=255, null=True)),
                ('card_type', models.CharField(max_length=255, null=True)),
                ('fos_user_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='user_save_card_trackings', to='gamification.fosuseruser')),
            ],
            options={
                'db_table': 'user_save_card_tracking',
            },
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(null=True)),
                ('workout_type', models.IntegerField(null=True)),
                ('level_id', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('code', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('image_name', models.CharField(max_length=255, null=True)),
                ('background_music', models.CharField(max_length=100, null=True)),
                ('duration', models.CharField(max_length=255, null=True)),
                ('point', models.IntegerField(null=True)),
                ('is_recommended', models.BooleanField(null=True)),
                ('name_ar', models.TextField(null=True)),
                ('description_ar', models.TextField(null=True)),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='workouts', to='gamification.fosuseruser')),
                ('workout_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workouts', to='gamification.workoutlevel')),
                ('workout_type_workoutToworkout_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workouts', to='gamification.workouttype')),
            ],
            options={
                'db_table': 'workout',
            },
        ),
        migrations.CreateModel(
            name='MemberWorkout',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(null=True)),
                ('key_id', models.IntegerField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('modifiedby', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('is_favourite', models.BooleanField(null=True)),
                ('is_history', models.BooleanField(default=False)),
                ('corporate_key', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gamification.corporatekey')),
                ('fos_user_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='gamification.fosuseruser')),
                ('workout', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gamification.workout')),
            ],
            options={
                'db_table': 'member_workout',
            },
        ),
    ]
